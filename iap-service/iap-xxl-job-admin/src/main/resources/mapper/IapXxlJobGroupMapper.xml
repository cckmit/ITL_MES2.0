<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.mapper.IapXxlJobGroupDao">
	
	<resultMap id="IapXxlJobGroup" type="com.xxl.job.admin.core.model.IapXxlJobGroup" >
		<result column="id" property="id" />
	    <result column="app_name" property="appname" />
	    <result column="title" property="title" />
		<result column="address_type" property="addressType" />
		<result column="address_list" property="addressList" />
	</resultMap>

	<sql id="Base_Column_List">
		t.id,
		t.app_name,
		t.title,
		t.address_type,
		t.address_list
	</sql>

	<!-- 查询所有 XxlJobGroup -->
	<select id="findAll" resultMap="IapXxlJobGroup">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_group AS t
		ORDER BY t.app_name, t.title, t.id ASC
	</select>

	<!-- 通过 addressType 查询符合条件的 XxlJobGroup -->
	<select id="findByAddressType" parameterType="java.lang.Integer" resultMap="IapXxlJobGroup">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_group AS t
		WHERE t.address_type = #{addressType}
		ORDER BY t.app_name, t.title, t.id ASC
	</select>

	<!-- 保存 iapXxlJobGroup -->
	<insert id="save" parameterType="com.xxl.job.admin.core.model.IapXxlJobGroup" useGeneratedKeys="true" keyProperty="id" >
		INSERT INTO xxl_job_group ( app_name, title, address_type, address_list)
		values ( #{appname}, #{title}, #{addressType}, #{addressList});
	</insert>

	<!-- 更新 iapXxlJobGroup -->
	<update id="update" parameterType="com.xxl.job.admin.core.model.IapXxlJobGroup" >
		UPDATE xxl_job_group
		SET app_name = #{appname},
			title = #{title},
			address_type = #{addressType},
			address_list = #{addressList}
		WHERE id = #{id}
	</update>

	<!-- 根据xxlJobGroup的id 删除 iapXxlJobGroup -->
	<delete id="remove" parameterType="java.lang.Integer" >
		DELETE FROM xxl_job_group
		WHERE id = #{id}
	</delete>

	<!-- 根据xxlJobGroup的id 查询 iapXxlJobGroup -->
	<select id="load" parameterType="java.lang.Integer" resultMap="IapXxlJobGroup">
		SELECT <include refid="Base_Column_List" />
		FROM xxl_job_group AS t
		WHERE t.id = #{id}
	</select>

	<!-- 分页查询（条件） XxlJobGroup -->
	<select id="pageList" parameterType="java.util.HashMap" resultMap="IapXxlJobGroup">
		SELECT top ${pagesize} <include refid="Base_Column_List" />
		FROM xxl_job_group AS t
		where id not in
		(select top ${offset}  m.id from xxl_job_group m
			<trim prefix="WHERE" prefixOverrides="AND | OR" >
				<if test="appname != null and appname != ''">
					AND m.app_name like CONCAT(CONCAT('%', #{appname}), '%')
				</if>
				<if test="title != null and title != ''">
					AND m.title like CONCAT(CONCAT('%', #{title}), '%')
				</if>
			</trim>
			ORDER BY m.app_name, m.title, m.id ASC

		)

		<if test="appname != null and appname != ''">
			AND t.app_name like CONCAT(CONCAT('%', #{appname}), '%')
		</if>
		<if test="title != null and title != ''">
			AND t.title like CONCAT(CONCAT('%', #{title}), '%')
		</if>

		ORDER BY t.app_name, t.title, t.id ASC
		<!--  LIMIT #{offset}, #{pagesize}-->

	</select>

	<!-- 查询总页数 -->
	<select id="pageListCount" parameterType="java.util.HashMap" resultType="int">
		SELECT count(1)
		FROM xxl_job_group AS t
		<trim prefix="WHERE" prefixOverrides="AND | OR" >
			<if test="appname != null and appname != ''">
				AND t.app_name like CONCAT(CONCAT('%', #{appname}), '%')
			</if>
			<if test="title != null and title != ''">
				AND t.title like CONCAT(CONCAT('%', #{title}), '%')
			</if>
		</trim>
	</select>

</mapper>